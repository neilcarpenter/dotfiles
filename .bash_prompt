# @gf3’s Sexy Bash Prompt, inspired by “Extravagant Zsh Prompt”
# Shamelessly copied from https://github.com/gf3/dotfiles
# Screenshot: http://i.imgur.com/s0Blh.png

if [[ $COLORTERM = gnome-* && $TERM = xterm ]] && infocmp gnome-256color >/dev/null 2>&1; then
	export TERM=gnome-256color
elif infocmp xterm-256color >/dev/null 2>&1; then
	export TERM=xterm-256color
fi

if tput setaf 1 &> /dev/null; then
	tput sgr0
	if [[ $(tput colors) -ge 256 ]] 2>/dev/null; then
		COLOR_1=$(tput setaf 26)
		COLOR_2=$(tput setaf 32)
		COLOR_3=$(tput setaf 38)
		COLOR_4=$(tput setaf 44)
		WHITE=$(tput setaf 256)
	else
		COLOR_1=$(tput setaf 5)
		COLOR_2=$(tput setaf 4)
		COLOR_3=$(tput setaf 2)
		COLOR_4=$(tput setaf 1)
		WHITE=$(tput setaf 7)
	fi
	BOLD=$(tput bold)
	RESET=$(tput sgr0)
else
	COLOR_1="\033[1;31m"
	COLOR_2="\033[1;33m"
	COLOR_3="\033[1;32m"
	COLOR_4="\033[1;35m"
	WHITE="\033[1;37m"
	BOLD=""
	RESET="\033[m"
fi

export COLOR_1
export COLOR_2
export COLOR_3
export COLOR_4
export WHITE
export BOLD
export RESET

function parse_git_dirty() {
	[[ $(git status 2> /dev/null | tail -n1) != "nothing to commit (working directory clean)" ]] && echo "*"
}

function parse_git_branch() {
	git branch --no-color 2> /dev/null | sed -e '/^[^*]/d' -e "s/* \(.*\)/\1$(parse_git_dirty)/"
}

export PS1="\[${BOLD}${COLOR_1}\]\u \[$WHITE\]at \[$COLOR_2\]\h \[$WHITE\]in \[$COLOR_3\]\w\[$WHITE\]\$([[ -n \$(git branch 2> /dev/null) ]] && echo \" on \")\[$COLOR_4\]\$(parse_git_branch)\[$WHITE\]\n\$ \[$RESET\]"
export PS2="\[$COLOR_2\]→ \[$RESET\]"